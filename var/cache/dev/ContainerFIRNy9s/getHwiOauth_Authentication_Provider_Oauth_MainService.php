<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'hwi_oauth.authentication.provider.oauth.main' shared service.

include_once $this->targetDirs[3].'\\vendor\\symfony\\security-core\\Authentication\\Provider\\AuthenticationProviderInterface.php';
include_once $this->targetDirs[3].'\\vendor\\hwi\\oauth-bundle\\Security\\Core\\Authentication\\Provider\\OAuthProvider.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\security-core\\User\\UserProviderInterface.php';
include_once $this->targetDirs[3].'\\vendor\\hwi\\oauth-bundle\\Security\\Core\\User\\OAuthAwareUserProviderInterface.php';
include_once $this->targetDirs[3].'\\vendor\\hwi\\oauth-bundle\\Security\\Core\\User\\EntityUserProvider.php';
include_once $this->targetDirs[3].'\\vendor\\hwi\\oauth-bundle\\Connect\\AccountConnectorInterface.php';
include_once $this->targetDirs[3].'\\src\\Security\\MyEntityUserProvider.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\security-core\\User\\UserCheckerInterface.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\security-core\\User\\UserChecker.php';

return $this->privates['hwi_oauth.authentication.provider.oauth.main'] = new \HWI\Bundle\OAuthBundle\Security\Core\Authentication\Provider\OAuthProvider(new \App\Security\MyEntityUserProvider(($this->services['doctrine'] ?? $this->getDoctrineService()), 'App\\Entity\\User', ['facebook' => 'facebookID', 'github' => 'githubID']), ($this->services['hwi_oauth.resource_ownermap.main'] ?? $this->getHwiOauth_ResourceOwnermap_MainService()), ($this->services['hwi_oauth.user_checker'] ?? ($this->services['hwi_oauth.user_checker'] = new \Symfony\Component\Security\Core\User\UserChecker())), ($this->services['security.token_storage'] ?? ($this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage())));
